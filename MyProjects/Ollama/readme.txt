Документация для программы
1. Общее описание
Программа предназначена для поиска ответов на вопросы по загруженным документам (PDF, TXT, DOCX).
Она использует векторное представление текста и модель машинного обучения для анализа контекста и генерации ответов.

Программа доступна в трёх версиях:

Текстовая версия (main.py) : Управление через командную строку.
Графическая версия (main_gui.py) : Удобный графический интерфейс для взаимодействия.
Облачная версия (main_cloud.py) : Интерфейс взаимодействия с API Qwen.

2. Требования к системе
a) Зависимости
Установите необходимые библиотеки:
pip install langchain langchain_community sentence-transformers PyPDF2 python-docx PyQt5
b) Модель LLM
Программа использует модель deepseek-r1:32b через библиотеку langchain_ollama.
Убедитесь, что Ollama установлен и запущен на вашем компьютере:
Скачать Ollama (https://ollama.ai/?spm=5aebb161.23742189.0.0.60a3c921OJpiiO)
c) Поддерживаемые форматы файлов
PDF (.pdf)
Текстовые файлы (.txt)
Microsoft Word (.docx)

3. Использование текстовой версии (main.py)
a) Запуск программы
Запустите программу, указав пути к файлам:
python main.py file1.pdf file2.txt file3.docx
b) Взаимодействие с программой
После загрузки файлов программа будет готова принимать вопросы.
Введите вопрос в командной строке:
What do you want to learn from the document? (Type "exit" to quit)
How to configure BGP on Nokia routers?
Программа выведет ответ на основе загруженных документов.
c) Особенности
История запросов : Все вопросы и ответы сохраняются в файл history.txt.
Проверка наличия файлов : Если файл уже добавлен, он не будет загружен повторно.
Поддержка нескольких форматов : Программа автоматически определяет формат файла и загружает его.

4. Использование графической версии (main_gui.py)
a) Запуск программы
Запустите программу:
python main_gui.py
b) Интерфейс программы
Выбор файлов :
Нажмите кнопку "Выбрать файлы" , чтобы загрузить документы.
Поддерживаются форматы: .pdf, .txt, .docx.
Задать вопрос :
Введите вопрос в текстовое поле.
Нажмите кнопку "Получить ответ" .
Просмотр ответа :
Ответ отобразится в нижней части окна.
История запросов :
Нажмите кнопку "Показать историю" , чтобы увидеть все предыдущие вопросы и ответы.
Нажмите кнопку "Очистить историю" , чтобы удалить историю.
c) Особенности
Прогресс-бар : Показывает статус загрузки файлов и обработки запросов.
Анимация работы : Кнопка меняет текст на "Ищем ответ...", а прогресс-бар показывает активность.
Сохранение истории : Все запросы и ответы сохраняются в файл history.txt.

5. Структура проекта
a) Файлы проекта
main.py : Текстовая версия программы.
main_gui.py : Графическая версия программы.
vector_store/ : Папка для хранения векторного представления документов.
history.txt : Файл для сохранения истории запросов.
b) Основные функции
get_loader_for_file(file_path) : Выбирает загрузчик в зависимости от формата файла.
get_file_hash(file_path) : Вычисляет хэш файла для проверки наличия.
load_or_create_vector_store(file_paths) : Загружает или создаёт векторное хранилище.
answer_question(question) : Генерирует ответ на основе загруженных документов.
save_to_history(question, answer) : Сохраняет вопрос и ответ в файл истории.

6. Примеры использования
a) Текстовая версия
python main.py Quality_of_Service_Advanced_Configuration_Guide_for_Classic_CLI.pdf example.txt example.docx
b) Графическая версия
1. Запустите программу:
   ```bash
   python main_gui.py

7. Что добавлено в облачную версию:
Выбор режима работы :
Добавлен выпадающий список (QComboBox) для выбора между "Локальный", "Qwen" и Deepseek.
Не забудьте заменить YOUR_QWEN_API_KEY и YOUR_DEEPSEEK_API_KEY на ваш реальный API ключ.

API Qwen :
Реализован метод answer_question_qwen, который отправляет запросы к API Qwen.
Разделение истории запросов для каждого режима:
Локальный : Использует файл local_history.txt.
Qwen : Использует файл qwen_history.txt.

1. Регистрация на Alibaba Cloud
Если у вас ещё нет аккаунта на Alibaba Cloud:
Перейдите на страницу регистрации:
Alibaba Cloud Registration
https://account.alibabacloud.com/register/intl_register.htm?spm=5aebb161.23742189.0.0.60a3c921BW056Q
Заполните форму регистрации (имя, email, пароль).
Подтвердите ваш email и завершите регистрацию.

2. Создание проекта и получение API ключа
После регистрации выполните следующие шаги:

a) Войдите в консоль Alibaba Cloud
Перейдите на страницу консоли:
Alibaba Cloud Console
https://account.alibabacloud.com/login/login.htm?spm=5aebb161.23742189.0.0.60a3c921BW056Q
b) Создайте Access Key
В верхнем правом углу нажмите на ваш профиль (рядом с аватаром).
Выберите "AccessKey Management" (Управление ключами доступа).
Нажмите "Create Access Key" .
Система предложит создать новый ключ. Подтвердите действие.
После создания вы увидите два значения:
Access Key ID : Идентификатор ключа.
Access Key Secret : Секретный ключ (храните его в безопасности).
Важно! Секретный ключ отображается только один раз при создании.
Убедитесь, что вы сохранили его в надёжном месте.

3. Настройка Qwen API
a) Подключите сервис DashScope
Перейдите в консоль Alibaba Cloud.
Найдите сервис DashScope (поиск в верхней строке поиска).
Активируйте сервис, если он ещё не активирован.
b) Используйте API ключ
Используйте Access Key ID и Access Key Secret для аутентификации запросов к API Qwen.
В коде замените YOUR_QWEN_API_KEY на ваш Access Key Secret .
Пример использования:
QWEN_API_KEY = "your-access-key-secret"

API Deepseek :

Чтобы получить API-ключ от Deepseek, вам нужно зарегистрироваться на их платформе и получить доступ к их API.
Вот пошаговая инструкция, как это сделать:

1. Перейдите на официальный сайт Deepseek
Откройте сайт Deepseek: https://www.deepseek.com.
Изучите разделы, связанные с API или разработчиками.
Обычно такие платформы предоставляют доступ к API через портал для разработчиков.

2. Зарегистрируйтесь или войдите в систему
Если у вас еще нет аккаунта, создайте его, используя свою электронную почту или аккаунт Google/GitHub.
Если у вас уже есть аккаунт, войдите в систему.

3. Перейдите в раздел API
После входа в систему найдите раздел, связанный с API или разработчиками.
Обычно он называется "API Documentation", "Developer Portal" или что-то подобное.
Изучите документацию, чтобы понять, как работает API и какие возможности он предоставляет.

4. Создайте API-ключ
В разделе API найдите опцию для создания нового API-ключа.
Обычно это кнопка "Create API Key" или "Generate Token".
Укажите название для вашего ключа (например, "My Project") и выберите необходимые разрешения
(например, доступ к чату, генерации текста и т.д.).
После создания ключа он будет отображен на экране.
Скопируйте его и сохраните в безопасном месте, так как позже вы не сможете его просмотреть.

5. Используйте API-ключ в вашем скрипте
Вставьте ваш API-ключ в переменную DEEPSEEK_API_KEY в вашем скрипте:
DEEPSEEK_API_KEY = "ваш_ключ_здесь"

6. Проверьте доступ
Убедитесь, что ваш API-ключ работает, отправив тестовый запрос через API.