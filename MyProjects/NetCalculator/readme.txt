Net Calculator v.3

1. Общее описание
Net Calculator — это графический инструмент для расчета параметров IP-сетей (IPv4, IPv6),
а также содержит таблицу QoS. Программа разработана с использованием библиотеки PyQt5.

2. Структура проекта
project/
├── main.py               # Главный файл для запуска приложения
├── ipv4_calculator.py    # Модуль для расчета параметров IPv4
├── ipv6_calculator.py    # Модуль для расчета параметров IPv6
├── qos_tab.py            # Модуль для отображения информации о QoS

3. Файл main.py
Описание: Главный файл приложения, который создает интерфейс с тремя вкладками: IPv4, IPv6 и QoS.

Функциональность:

Создание главного окна.
Добавление вкладок (QTabWidget) для IPv4, IPv6 и QoS.
Инициализация классов из других модулей (IPv4Calculator, IPv6Calculator, QoSTab).

Ключевые компоненты:
MainWindow: Класс, наследующийся от QMainWindow. Отвечает за создание интерфейса и добавление вкладок.

4. Файл ipv4_calculator.py
Описание: Модуль для расчета параметров IPv4-сетей.
Включает в себя поля для ввода IP-адреса и маски подсети, а также таблицу результатов.

Функциональность:

Расчет параметров IPv4-сети (адрес, маска, wildcard, network, broadcast, hostmin, hostmax, количество хостов).
Возможность ввода IP-адреса в формате IP/mask или выбор маски из выпадающего списка.
Автоматическая вставка IP-адреса системы при запуске.
Отображение диапазонов байтов для масок /1–/30.
Поддержка контекстного меню для копирования данных из таблицы.

Ключевые компоненты:
IPv4Calculator: Класс, наследующийся от QWidget. Отвечает за создание интерфейса и логики расчета.
ipv4_hex: Функция для преобразования IP-адреса в 16-ричный формат.
ipv4_binary: Функция для преобразования IP-адреса в бинарный формат с разделением сетевой и хостовой частей.

Методы класса IPv4Calculator:
1. __init__: Конструктор класса, инициализирует интерфейс.
2. init_ui: Настройка пользовательского интерфейса (поля ввода, кнопки, таблица).
3. calculate_ipv4: Основной метод для расчета параметров IPv4-сети.
4. show_context_menu: Метод для показа контекстного меню при правом клике на таблице.

5. Файл ipv6_calculator.py
Описание: Модуль представляет собой вкладку "IPv6". Он предназначен для анализа и расчета параметров IPv6-сетей.
Пользователь может ввести IPv6-адрес с префиксом (например, 2001:db8::/64) и получить информацию о сети,
такую как CIDR-нотация, диапазон адресов, маска, количество доступных адресов и подсетей.

Основные функции
1. Ввод IPv6-адреса:
  Пользователь может ввести IPv6-адрес с префиксом в поле ввода.
  Программа автоматически подставляет основной IPv6-адрес системы (если он доступен) при запуске.
2. Выбор формата отображения:
  Пользователь может выбрать один из двух форматов отображения IPv6-адресов:
    - Compressed : Сжатый формат (например, 2001:db8::).
    - Expanded : Полный формат с ведущими нулями (например, 2001:0db8:0000:0000:0000:0000:0000:0000).
3. Расчет параметров сети:
  Программа рассчитывает следующие параметры для введенного IPv6-адреса:
    - CIDR Notation : Нормализованный сетевой адрес с префиксом (например, 2001:db8::/64).
    - Address : Исходный IPv6-адрес в выбранном формате.
    - Address Range Start : Начало диапазона адресов сети.
    - Address Range End : Конец диапазона адресов сети.
    - Mask Bits : Префикс маски (например, 64).
    - Usable Addresses : Количество доступных адресов в сети (формат с разделителями тысяч).
    - Available Subnets : Количество доступных подсетей для заданного префикса.

Структура кода
Класс IPv6Calculator
  Основной класс приложения, наследуется от QWidget.
  Отвечает за создание интерфейса и обработку логики программы.
Методы класса
1. __init__(self) :
  Инициализирует объект класса и вызывает метод initUI() для создания интерфейса.
2. initUI(self) :
  Создает графический интерфейс:
    - Поле ввода для IPv6-адреса.
    - Выпадающий список для выбора формата отображения (Compressed или Expanded).
    - Кнопка "Calculate Subnet" для расчета параметров сети.
    - Таблица для отображения результатов.
3. insert_system_ipv6(self) :
  Автоматически подставляет основной IPv6-адрес системы в поле ввода (если он доступен).
  Игнорирует локальные адреса с суффиксом %.
4. calculate(self) :
  Обрабатывает введенный IPv6-адрес и префикс.
  Парсит адрес с помощью модуля ipaddress и сохраняет его в переменной last_valid_network.
5. update_results(self) :
  Обновляет таблицу результатов на основе текущей сети (last_valid_network) и выбранного формата отображения.
  Рассчитывает и отображает все параметры сети.
6. format_ipv6(self, ipv6_str, display_format) :
  Форматирует IPv6-адрес в зависимости от выбранного формата (Compressed или Expanded).
  Сохраняет префикс, если он присутствует.

6. Файл qos_tab.py
Описание: Модуль представляет собой вкладку "QoS" в приложении Net Calculator,
которая содержит таблицу с параметрами QoS (Quality of Service) согласно спецификации RFC 2474, RFC 2475.
Таблица отображает значения для различных классов сервиса (AF, EF, BE, CS)
и позволяет пользователю фильтровать данные по каждому столбцу.

Основные функции

Класс QoSTab
Класс QoSTab является основным виджетом, который отображает таблицу с данными о классах трафика QoS.
Он предоставляет возможность фильтрации данных по столбцам.

Методы класса
1. __init__(self)
  Конструктор класса. Инициализирует интерфейс и вызывает метод init_ui().
2. init_ui(self)
  Инициализирует графический интерфейс:
    - Создает таблицу для отображения данных о QoS.
    - Добавляет фильтры под каждым столбцом таблицы.
    - Загружает данные в таблицу с помощью метода generate_qos_data().
3. filter_table(self, column, text)
  Фильтрует строки таблицы по указанному столбцу и тексту.
  Параметры:
    - column (int): Номер столбца, по которому выполняется фильтрация.
    - text (str): Текст для фильтрации.
4. generate_qos_data(self)
  Генерирует данные для таблицы QoS.
  Возвращает список списков, где каждый внутренний список представляет строку таблицы.
  Данные включают:
    - Классы трафика: AF (Assured Forwarding), EF (Expedited Forwarding), BE (Best Effort), CS (Class Selector).
    - Поля: Application, CoS=IPP, Traffic Class, DSCP, DSCP HEX, ToS, ToS HEX, Drop Precedence, биты DS Field и ECN.

Структура таблицы
Таблица содержит следующие столбцы:
1. Application
   Описание приложения или типа трафика (например, "Low-Priority", "Voice", "Best Effort").
2. CoS=IPP
   Класс обслуживания (Class of Service) или IP Precedence (значение от 0 до 7).
3. Traffic Class
   Название класса трафика (например, "AF11", "EF", "BE", "CS0").
4. DSCP
   Значение DSCP (Differentiated Services Code Point) в десятичном формате.
5. DSCP hex
   Значение DSCP в шестнадцатеричном формате (например, "0x2E" для EF).
6. ToS
   Значение поля ToS (Type of Service) в десятичном формате.
7. ToS hex
   Значение поля ToS в шестнадцатеричном формате.
8. DP
   Уровень Drop Precedence (вероятность потери пакетов): "Low", "Medium", "High".
9. 8th bit, 7th bit, 6th bit, 5th bit, 4th bit, 3rd bit
   Бинарное представление DSCP (6 бит).
10. 2nd bit ECT(0), 1st bit ECT(1)
    Бит ECN (Explicit Congestion Notification):
      - ECT(0): ECN-Capable Transport (0 или 1).
      - ECT(1): ECN-Capable Transport (0 или 1).

Фильтрация данных
  Под каждым столбцом таблицы расположен текстовый фильтр.
  Введите текст в поле фильтра, чтобы скрыть строки, не содержащие указанный текст.
  Фильтрация выполняется без учета регистра.